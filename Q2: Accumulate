def accumulate(combiner,base,n,term):
	result=base
	while n>0:
		result,n=combiner(result,term(n)),n-1
    
def identity(n):
	return n
def square(n):
	return n*n
	
def summation_using_accumulate(n, term):
	return accumulate(add,0,n,term)

def product_using_accumulate(n,term):
	return accumulate(mul,1,n,term)
	
%% I forgot to design "triple", but they are same
